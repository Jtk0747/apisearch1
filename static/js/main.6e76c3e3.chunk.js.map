{"version":3,"sources":["Components/Actions.js","reducers/ReduceRest.js","reducers/index.js","Components/RestaurantMenu.js","Components/RestaurantView.js","selectors/Selectors.js","Components/SearchForm.js","Components/RestaurantContainer.js","Components/App.js","index.js"],"names":["fetchDataBegin","type","initialState","restaurants","refine","city","total_items","loading","error","restaurantReducer","state","action","payload","result","total_entries","combineReducers","RestaurantCard","props","restaurant","className","Card","CardImg","src","image_url","alt","name","CardBody","CardTitle","CardSubtitle","address","CardText","price","RestaurantList","Row","length","map","Col","class","key","id","getVisibleRestaurants","createSelector","filter","toLowerCase","includes","area","SearchRestaurants","onRefineChange","event","setState","target","value","onChange","onFormSubmit","preventDefault","fetchData","Form","onSubmit","this","FormGroup","Label","for","Input","placeholder","Button","color","Component","connect","fetchUrl","dispatch","getState","selectedCity","fetch","then","response","ok","Error","statusText","json","catch","err","RestaurantContainer","message","Container","total","App","store","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6e76c3e3.chunk.js","sourcesContent":["export const FETCH_DATA_BEGIN   = 'FETCH_DATA_BEGIN';\r\nexport const FETCH_DATA_SUCCESS = 'FETCH_DATA_SUCCESS';\r\nexport const FETCH_DATA_FAILURE = 'FETCH_DATA_FAILURE';\r\nexport const ADD_REFINE_DATA = 'ADD_REFINE_DATA';\r\n\r\nexport const fetchData = (city, refine) => {\r\n    const fetchUrl = `https://opentable.herokuapp.com/api/restaurants?city=${city}&&per_page=100`;\r\n\r\n    return (dispatch, getState) => {\r\n        const selectedCity = getState().restaurantReducer.city;\r\n\r\n        dispatch({ type: ADD_REFINE_DATA, payload: refine });\r\n        \r\n        if (city !== selectedCity) {\r\n            dispatch(fetchDataBegin());\r\n\r\n            return fetch(fetchUrl)\r\n              .then(response => {\r\n                if (!response.ok) {\r\n                    throw new Error(response.statusText)\r\n                }\r\n\r\n                return response.json();\r\n              })\r\n              .then(result => {\r\n                dispatch({ type: FETCH_DATA_SUCCESS, payload: { result, city } });\r\n              })\r\n              .catch(err => {\r\n                dispatch({ type: FETCH_DATA_FAILURE, error: err })\r\n              })\r\n        }\r\n    }\r\n}\r\n\r\nexport const fetchDataBegin = () => ({\r\n  type: FETCH_DATA_BEGIN\r\n});\r\n\r\nexport const fetchDataSuccess = DATA => ({\r\n  type: FETCH_DATA_SUCCESS,\r\n  payload: { DATA }\r\n});\r\n\r\nexport const fetchDataFailure = error => ({\r\n  type: FETCH_DATA_FAILURE,\r\n  payload: { error }\r\n});\r\n\r\nexport const addRefineData = refine => ({\r\n  type: ADD_REFINE_DATA,\r\n  payload: { refine }\r\n});","import {\r\n    FETCH_DATA_BEGIN,\r\n    FETCH_DATA_SUCCESS,\r\n    FETCH_DATA_FAILURE,\r\n    ADD_REFINE_DATA\r\n  } from '../Components/Actions';\r\n  \r\n  const initialState = {\r\n    restaurants: [],\r\n    refine: '',\r\n    city: '',\r\n    total_items: 0,\r\n    loading: false,\r\n    error: null\r\n  };\r\n  \r\n  const restaurantReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n       case FETCH_DATA_BEGIN:\r\n        return {\r\n          ...state,\r\n          loading: true,\r\n          error: null\r\n        };\r\n  \r\n      case FETCH_DATA_SUCCESS:\r\n        return {\r\n          ...state,\r\n          loading: false,\r\n          restaurants: action.payload.result.restaurants,\r\n          total_items: action.payload.result.total_entries,\r\n          city: action.payload.city\r\n        };\r\n  \r\n      case FETCH_DATA_FAILURE:\r\n        return {\r\n          ...state,\r\n          loading: false,\r\n          error: action.error,\r\n          restaurants: []\r\n        };\r\n  \r\n      case ADD_REFINE_DATA: \r\n        return {\r\n          ...state,\r\n          refine: action.payload\r\n        }\r\n  \r\n      default:\r\n        return state\r\n    }\r\n  }\r\n  \r\n  export default restaurantReducer;","\r\nimport { combineReducers } from 'redux'\r\nimport restaurantReducer from './ReduceRest'\r\n\r\nexport default combineReducers({\r\n  restaurantReducer\r\n}) \r\n \r\n","import React from 'react';\r\nimport { Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle } from 'reactstrap';\r\nimport '../Css/App.css';\r\n\r\n\r\nconst RestaurantCard = props => {\r\n  const restaurant = props.restaurant;\r\n\r\n  return(\r\n    <div className='row'>\r\n      <Card className='cards'>\r\n        <CardImg src={restaurant.image_url} alt={ restaurant.name } />\r\n          <CardBody>\r\n            <CardTitle><strong>{ restaurant.name }</strong></CardTitle>\r\n            <CardSubtitle>{ restaurant.address }, {restaurant.city}</CardSubtitle>\r\n            <CardText>Price: { restaurant.price }</CardText>\r\n          </CardBody>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RestaurantCard;","import React from 'react';\r\nimport { Row, Col } from 'reactstrap';\r\nimport RestaurantCard from './RestaurantMenu';\r\nimport '../Css/App.css';\r\n\r\nconst RestaurantList = props => {\r\n  return(\r\n    <div className='view'>\r\n      <Row>\r\n        { props.restaurants && props.restaurants.length > 0 ? \r\n        props.restaurants.map(restaurant => {\r\n      return (\r\n            <Col class='cardList' key={restaurant.id}>\r\n              <RestaurantCard restaurant={restaurant} />\r\n            </Col>\r\n          )\r\n        }) : 'Refine your favorite restaurants Here' }\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RestaurantList;","import { createSelector } from 'reselect'\r\n\r\nconst getRestaurants = (state) => state.restaurantReducer.restaurants;\r\nconst getRestaurantsFilter = (state) => state.restaurantReducer.refine;\r\n\r\nexport const getVisibleRestaurants = createSelector(\r\n    [getRestaurantsFilter, getRestaurants],\r\n    (filter, restaurants) => {\r\n      if (filter) {\r\n          filter = filter.toLowerCase();\r\n\r\n            return restaurants.filter(restaurant => \r\n                (restaurant.name.toLowerCase().includes(filter) || restaurant.address.toLowerCase().includes(filter)\r\n                || restaurant.area.toLowerCase().includes(filter))\r\n            )\r\n      }\r\n\r\n      return restaurants;\r\n    }\r\n)","import React, { Component } from \"react\";\r\nimport { Row, Col, Button, Form, FormGroup, Label, Input } from \"reactstrap\";\r\nimport { fetchData } from './Actions';\r\nimport { connect } from 'react-redux';\r\nimport '../Css/Restaurant.css';\r\n\r\nclass SearchRestaurants extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.state = {\r\n            city: '',\r\n            error: '',\r\n            refine: ''\r\n        }\r\n    }\r\n\r\n    onRefineChange = event => {\r\n        this.setState({\r\n            refine: event.target.value\r\n        })\r\n    }\r\n\r\n    onChange = event => {\r\n        this.setState({\r\n            city: event.target.value\r\n        })\r\n    };\r\n\r\n    onFormSubmit = event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.city) {\r\n            this.setState({error: 'Please enter a city name'})\r\n        } else {\r\n            this.setState({ error: ''})\r\n            this.props.fetchData(this.state.city, this.state.refine);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Row>\r\n              <Col>\r\n                <Form onSubmit={this.onFormSubmit} className=\"form\">\r\n                    <FormGroup className=\"form1\">\r\n                        <Label className=\"names-1\" for=\"cityName\">City-Name</Label>\r\n                            <Input\r\n                                type=\"text\"\r\n                                name=\"cityName\"\r\n                                className=\"Search\"\r\n                                placeholder=\"City\"\r\n                                onChange={this.onChange}\r\n                                value={this.state.city}   \r\n                            />\r\n                    </FormGroup>\r\n\r\n                    <FormGroup className=\"form2\">\r\n                        <Label className=\"names-2\" for=\"refine\">Address or PostalCode</Label>\r\n                            <Input\r\n                                type=\"text\"\r\n                                name=\"refine\"\r\n                                className=\"Search\"\r\n                                placeholder=\"Restaurant Name or postalCode\"\r\n                                onChange={this.onRefineChange}\r\n                                value={this.state.refine}\r\n                            />\r\n                    </FormGroup>\r\n\r\n                    <Button\r\n                      className=\"Button\" color=\"primary\">\r\n                        Search\r\n                    </Button>\r\n                    {this.state.error ? <p className=\"text-danger\">{this.state.error}</p> : null}\r\n                </Form>\r\n            </Col>\r\n          </Row>\r\n        );\r\n    }\r\n};\r\n\r\nconst mapStatetoProps = (state) => {\r\n    return {\r\n      city: state.restaurantReducer.city,\r\n    } \r\n}\r\n  \r\nexport default connect(mapStatetoProps, { fetchData })(SearchRestaurants);","import React, { Component } from 'react';\r\nimport RestaurantList from './RestaurantView';\r\nimport { connect } from 'react-redux';\r\nimport { getVisibleRestaurants } from '../selectors/Selectors';\r\nimport SearchRestaurants from './SearchForm';\r\nimport { Container } from 'reactstrap';\r\nimport '../Css/App.css';\r\n\r\nclass RestaurantContainer extends Component {\r\n  render() {\r\n    if (this.props.error) {\r\n      return <div>Error! {this.props.error.message}</div>;\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Container>\r\n          <SearchRestaurants />\r\n          {this.props.loading ? <p>Loading</p> : null }\r\n          <p className='total'>Total items: { this.props.refine ? this.props.restaurants.length : this.props.total }</p> \r\n          <RestaurantList restaurants={this.props.restaurants} />\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStatetoProps = (state) => {\r\n  return {\r\n    restaurants: getVisibleRestaurants(state),\r\n    refine: state.restaurantReducer.refine,\r\n    total: state.restaurantReducer.total_items,\r\n    error: state.restaurantReducer.error,\r\n    loading: state.restaurantReducer.loading\r\n  } \r\n}\r\n\r\nexport default connect(mapStatetoProps, null)(RestaurantContainer);","import React , {Component} from 'react';\nimport '../Css/Restaurant.css';\nimport '../Css/App.css';\nimport RestaurantContainer from './RestaurantContainer';\n\n\nexport default class App extends Component   {\n \n  render() {\n    return (\n        <div className=\"App\">\n          <header  className=\"App-header\">\n            <h1 className=\"App-title\">Search for the Best Local Restaurants...!!</h1>\n          </header>\n        <RestaurantContainer />\n      </div>\n      );\n    }\n  }\n  \n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux'\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers'\r\nimport App from './Components/App';\r\nimport './index.css';\r\n\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  applyMiddleware(thunk)\r\n);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}